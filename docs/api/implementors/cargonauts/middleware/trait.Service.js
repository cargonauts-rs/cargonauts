(function() {var implementors = {};
implementors["cargonauts"] = ["impl <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"hyper/client/connect/struct.HttpConnector.html\" title=\"struct hyper::client::connect::HttpConnector\">HttpConnector</a>","impl&lt;C, B&gt; <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"hyper/client/struct.Client.html\" title=\"struct hyper::client::Client\">Client</a>&lt;C, B&gt; <span class=\"where fmt-newline\">where B: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Error = <a class=\"enum\" href=\"cargonauts/middleware/http/enum.Error.html\" title=\"enum cargonauts::middleware::http::Error\">Error</a>&gt; + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"hyper/client/connect/trait.Connect.html\" title=\"trait hyper::client::connect::Connect\">Connect</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt;</span>","impl <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"tokio_redis/struct.Client.html\" title=\"struct tokio_redis::Client\">Client</a>","impl&lt;T, P&gt; <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"tokio_proto/simple/pipeline/client/struct.ClientService.html\" title=\"struct tokio_proto::simple::pipeline::client::ClientService\">ClientService</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where P: <a class=\"trait\" href=\"tokio_proto/simple/pipeline/client/trait.ClientProto.html\" title=\"trait tokio_proto::simple::pipeline::client::ClientProto\">ClientProto</a>&lt;T&gt;, T: 'static</span>","impl&lt;T, P&gt; <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"tokio_proto/simple/multiplex/client/struct.ClientService.html\" title=\"struct tokio_proto::simple::multiplex::client::ClientService\">ClientService</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where P: <a class=\"trait\" href=\"tokio_proto/simple/multiplex/client/trait.ClientProto.html\" title=\"trait tokio_proto::simple::multiplex::client::ClientProto\">ClientProto</a>&lt;T&gt;, T: 'static</span>","impl&lt;R, S, E&gt; <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"tokio_proto/util/client_proxy/struct.ClientProxy.html\" title=\"struct tokio_proto::util::client_proxy::ClientProxy\">ClientProxy</a>&lt;R, S, E&gt; <span class=\"where fmt-newline\">where E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</span>","impl&lt;C&gt; <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"cargonauts/clients/mock/struct.MockConnection.html\" title=\"struct cargonauts::clients::mock::MockConnection\">MockConnection</a>&lt;C&gt; <span class=\"where fmt-newline\">where C: <a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">NewService</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Request</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Request</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Request</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Response</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a></span>","impl&lt;I, O, T, F&gt; <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"rigging/endpoint/struct.EndpointService.html\" title=\"struct rigging::endpoint::EndpointService\">EndpointService</a>&lt;I, O, T, F&gt; <span class=\"where fmt-newline\">where T: <a class=\"trait\" href=\"rigging/endpoint/trait.Endpoint.html\" title=\"trait rigging::endpoint::Endpoint\">Endpoint</a>&lt;F, I, O&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span>","impl <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"rigging/routes/struct.RoutingTable.html\" title=\"struct rigging::routes::RoutingTable\">RoutingTable</a>","impl&lt;F&gt; <a class=\"trait\" href=\"cargonauts/middleware/trait.Service.html\" title=\"trait cargonauts::middleware::Service\">Service</a> for <a class=\"struct\" href=\"rigging/routes/struct.AssetHandler.html\" title=\"struct rigging::routes::AssetHandler\">AssetHandler</a>&lt;F&gt; <span class=\"where fmt-newline\">where F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Fn.html\" title=\"trait core::ops::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">&amp;'static [</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>, <a class=\"struct\" href=\"cargonauts/middleware/struct.Request.html\" title=\"struct cargonauts::middleware::Request\">Request</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&lt;Error = <a class=\"enum\" href=\"cargonauts/middleware/http/enum.Error.html\" title=\"enum cargonauts::middleware::http::Error\">Error</a>, Item = <a class=\"struct\" href=\"cargonauts/middleware/http/struct.Response.html\" title=\"struct cargonauts::middleware::http::Response\">Response</a>&lt;<a class=\"struct\" href=\"hyper/http/body/struct.Body.html\" title=\"struct hyper::http::body::Body\">Body</a>&gt;&gt; + 'static&gt;</span>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
