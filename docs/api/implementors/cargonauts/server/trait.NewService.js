(function() {var implementors = {};
implementors["cargonauts"] = ["impl <a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">NewService</a> for <a class=\"struct\" href=\"tokio_redis/struct.Redis.html\" title=\"struct tokio_redis::Redis\">Redis</a>","impl&lt;Kind, P&gt; <a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">NewService</a> for <a class=\"struct\" href=\"tokio_proto/tcp_client/struct.BoundTcpClient.html\" title=\"struct tokio_proto::tcp_client::BoundTcpClient\">BoundTcpClient</a>&lt;Kind, P&gt; <span class=\"where fmt-newline\">where P: <a class=\"trait\" href=\"tokio_proto/trait.BindClient.html\" title=\"trait tokio_proto::BindClient\">BindClient</a>&lt;Kind, <a class=\"struct\" href=\"tokio_core/net/tcp/struct.TcpStream.html\" title=\"struct tokio_core::net::tcp::TcpStream\">TcpStream</a>&gt;</span>","impl&lt;C&gt; <a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">NewService</a> for <a class=\"struct\" href=\"cargonauts/clients/mock/struct.MockConnection.html\" title=\"struct cargonauts::clients::mock::MockConnection\">MockConnection</a>&lt;C&gt; <span class=\"where fmt-newline\">where C: <a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">NewService</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Request</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Request</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Request</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Response</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a></span>","impl <a class=\"trait\" href=\"cargonauts/server/trait.NewService.html\" title=\"trait cargonauts::server::NewService\">NewService</a> for <a class=\"struct\" href=\"rigging/routes/struct.RoutingTable.html\" title=\"struct rigging::routes::RoutingTable\">RoutingTable</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
