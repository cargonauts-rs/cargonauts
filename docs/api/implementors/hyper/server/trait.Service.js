(function() {var implementors = {};
implementors["hyper"] = ["impl&lt;T, P&gt; <a class=\"trait\" href=\"hyper/server/trait.Service.html\" title=\"trait hyper::server::Service\">Service</a> for <a class=\"struct\" href=\"tokio_proto/simple/pipeline/client/struct.ClientService.html\" title=\"struct tokio_proto::simple::pipeline::client::ClientService\">ClientService</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where P: <a class=\"trait\" href=\"tokio_proto/simple/pipeline/client/trait.ClientProto.html\" title=\"trait tokio_proto::simple::pipeline::client::ClientProto\">ClientProto</a>&lt;T&gt;, T: 'static</span>","impl&lt;T, P&gt; <a class=\"trait\" href=\"hyper/server/trait.Service.html\" title=\"trait hyper::server::Service\">Service</a> for <a class=\"struct\" href=\"tokio_proto/simple/multiplex/client/struct.ClientService.html\" title=\"struct tokio_proto::simple::multiplex::client::ClientService\">ClientService</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where P: <a class=\"trait\" href=\"tokio_proto/simple/multiplex/client/trait.ClientProto.html\" title=\"trait tokio_proto::simple::multiplex::client::ClientProto\">ClientProto</a>&lt;T&gt;, T: 'static</span>","impl&lt;R, S, E&gt; <a class=\"trait\" href=\"hyper/server/trait.Service.html\" title=\"trait hyper::server::Service\">Service</a> for <a class=\"struct\" href=\"tokio_proto/util/client_proxy/struct.ClientProxy.html\" title=\"struct tokio_proto::util::client_proxy::ClientProxy\">ClientProxy</a>&lt;R, S, E&gt; <span class=\"where fmt-newline\">where E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</span>","impl <a class=\"trait\" href=\"hyper/server/trait.Service.html\" title=\"trait hyper::server::Service\">Service</a> for <a class=\"struct\" href=\"hyper/client/struct.HttpConnector.html\" title=\"struct hyper::client::HttpConnector\">HttpConnector</a>","impl&lt;C, B&gt; <a class=\"trait\" href=\"hyper/server/trait.Service.html\" title=\"trait hyper::server::Service\">Service</a> for <a class=\"struct\" href=\"hyper/client/struct.Client.html\" title=\"struct hyper::client::Client\">Client</a>&lt;C, B&gt; <span class=\"where fmt-newline\">where C: <a class=\"trait\" href=\"hyper/client/trait.Connect.html\" title=\"trait hyper::client::Connect\">Connect</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Error = <a class=\"enum\" href=\"hyper/error/enum.Error.html\" title=\"enum hyper::error::Error\">Error</a>&gt; + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"trait\" href=\"futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt;</span>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
