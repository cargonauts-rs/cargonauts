initSidebarItems({"fn":[["copy","Creates a future which represents copying all the bytes from one object to another."],["flush","Creates a future which will entirely flush an I/O object and then yield the object itself."],["lines","Creates a new stream from the I/O object given representing the lines of input that are found on `A`."],["read","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type."],["read_exact","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner."],["read_to_end","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided."],["read_until","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided until the delimiter `byte` is reached. This method is the async equivalent to [`BufRead::read_until`]."],["shutdown","Creates a future which will entirely shutdown an I/O object and then yield the object itself."],["write_all","Creates a future that will write the entire contents of the buffer `buf` to the stream `a` provided."]],"struct":[["Copy","A future which will copy all data from a reader into a writer."],["Flush","A future used to fully flush an I/O object."],["Lines","Combinator created by the top-level `lines` method which is a stream over the lines of text on an I/O object."],["Read","A future which can be used to easily read available number of bytes to fill a buffer."],["ReadExact","A future which can be used to easily read exactly enough bytes to fill a buffer."],["ReadHalf","The readable half of an object returned from `AsyncRead::split`."],["ReadToEnd","A future which can be used to easily read the entire contents of a stream into a vector."],["ReadUntil","A future which can be used to easily read the contents of a stream into a vector until the delimiter is reached."],["Shutdown","A future used to fully shutdown an I/O object."],["Window","A owned window around an underlying buffer."],["WriteAll","A future used to write the entire contents of some data to a stream."],["WriteHalf","The writable half of an object returned from `AsyncRead::split`."]]});